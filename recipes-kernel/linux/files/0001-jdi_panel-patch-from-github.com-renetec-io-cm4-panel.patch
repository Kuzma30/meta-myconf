From 1f86838a37ce00b34caa9e8ebca6a58b74c72d58 Mon Sep 17 00:00:00 2001
From: Kuzemko Alexandr <kuzemkoa@gmail.com>
Date: Sat, 24 Dec 2022 12:17:10 +0200
Subject: [PATCH] jdi_panel patch from
 github.com/renetec-io/cm4-panel-jdi-lt070me05000

---
 .../gpu/drm/panel/panel-jdi-lt070me05000.c    | 94 +++++++++++++------
 1 file changed, 65 insertions(+), 29 deletions(-)

diff --git a/drivers/gpu/drm/panel/panel-jdi-lt070me05000.c b/drivers/gpu/drm/panel/panel-jdi-lt070me05000.c
index ff827cc7a060..5478aa8a89df 100644
--- a/drivers/gpu/drm/panel/panel-jdi-lt070me05000.c
+++ b/drivers/gpu/drm/panel/panel-jdi-lt070me05000.c
@@ -132,13 +132,6 @@ static int jdi_panel_init(struct jdi_panel *jdi)
 
 	mdelay(20);
 
-	ret = mipi_dsi_generic_write(dsi, (u8[]){0xB0, 0x03}, 2);
-	if (ret < 0) {
-		dev_err(dev, "failed to set default values for mcap: %d\n"
-			, ret);
-		return ret;
-	}
-
 	return 0;
 }
 
@@ -150,9 +143,37 @@ static int jdi_panel_on(struct jdi_panel *jdi)
 
 	dsi->mode_flags |= MIPI_DSI_MODE_LPM;
 
-	ret = mipi_dsi_dcs_set_display_on(dsi);
-	if (ret < 0)
-		dev_err(dev, "failed to set display on: %d\n", ret);
+	gpiod_set_value_cansleep(jdi->dcdc_en_gpio, 1);
+	msleep(20);
+
+	do {
+		ret = mipi_dsi_dcs_exit_sleep_mode(dsi);
+		if (ret < 0) {
+			dev_err(dev, "failed to exit sleep mode: %d\n", ret);
+			msleep(20);
+		}
+	} while (ret == -ETIMEDOUT);
+
+	msleep(120);
+
+	do {
+		ret = mipi_dsi_generic_write(dsi, (u8[])
+						{0xB3, 0x26, 0x08, 0x00, 0x20, 0x00}, 6);
+		if (ret < 0) {
+			dev_err(dev, "failed to set display interface setting: %d\n"
+				, ret);
+			msleep(20);
+		}
+	} while (ret == -ETIMEDOUT);
+	mdelay(20);
+
+	do {
+		ret = mipi_dsi_dcs_set_display_on(dsi);
+		if (ret < 0)
+			dev_err(dev, "failed to set display on: %d\n", ret);
+
+		msleep(20);
+	} while (ret == -ETIMEDOUT);
 
 	return ret;
 }
@@ -163,17 +184,30 @@ static void jdi_panel_off(struct jdi_panel *jdi)
 	struct device *dev = &jdi->dsi->dev;
 	int ret;
 
-	dsi->mode_flags &= ~MIPI_DSI_MODE_LPM;
+	dsi->mode_flags |= MIPI_DSI_MODE_LPM;
 
-	ret = mipi_dsi_dcs_set_display_off(dsi);
-	if (ret < 0)
-		dev_err(dev, "failed to set display off: %d\n", ret);
+	do {
+		ret = mipi_dsi_dcs_set_display_off(dsi);
+		if (ret < 0) {
+			dev_err(dev, "failed to set display off: %d\n", ret);
+			msleep(20);
+		}
+	} while (ret == -ETIMEDOUT);
 
-	ret = mipi_dsi_dcs_enter_sleep_mode(dsi);
-	if (ret < 0)
-		dev_err(dev, "failed to enter sleep mode: %d\n", ret);
+	msleep(20);
+
+	do {
+		ret = mipi_dsi_dcs_enter_sleep_mode(dsi);
+		if (ret < 0) {
+			dev_err(dev, "failed to enter sleep mode: %d\n", ret);
+			msleep(20);
+		}
+	} while (ret == -ETIMEDOUT);
 
 	msleep(100);
+
+	gpiod_set_value_cansleep(jdi->dcdc_en_gpio, 0);
+	msleep(20);
 }
 
 static int jdi_panel_disable(struct drm_panel *panel)
@@ -185,6 +219,8 @@ static int jdi_panel_disable(struct drm_panel *panel)
 
 	backlight_disable(jdi->backlight);
 
+	jdi_panel_off(jdi);
+
 	jdi->enabled = false;
 
 	return 0;
@@ -279,6 +315,10 @@ static int jdi_panel_enable(struct drm_panel *panel)
 	if (jdi->enabled)
 		return 0;
 
+	msleep(200);
+
+	jdi_panel_on(jdi);
+
 	backlight_enable(jdi->backlight);
 
 	jdi->enabled = true;
@@ -346,13 +386,15 @@ static int dsi_dcs_bl_update_status(struct backlight_device *bl)
 	struct mipi_dsi_device *dsi = bl_get_data(bl);
 	int ret;
 
-	dsi->mode_flags &= ~MIPI_DSI_MODE_LPM;
+	if (!backlight_is_blank(bl)) {
+		dsi->mode_flags &= ~MIPI_DSI_MODE_LPM;
 
-	ret = mipi_dsi_dcs_set_display_brightness(dsi, bl->props.brightness);
-	if (ret < 0)
-		return ret;
+		ret = mipi_dsi_dcs_set_display_brightness(dsi, bl->props.brightness);
+		if (ret < 0)
+			return ret;
 
-	dsi->mode_flags |= MIPI_DSI_MODE_LPM;
+		dsi->mode_flags |= MIPI_DSI_MODE_LPM;
+	}
 
 	return 0;
 }
@@ -473,13 +515,7 @@ static int jdi_panel_probe(struct mipi_dsi_device *dsi)
 	if (ret < 0)
 		return ret;
 
-	ret = mipi_dsi_attach(dsi);
-	if (ret < 0) {
-		jdi_panel_del(jdi);
-		return ret;
-	}
-
-	return 0;
+	return mipi_dsi_attach(dsi);
 }
 
 static int jdi_panel_remove(struct mipi_dsi_device *dsi)
-- 
2.34.1

